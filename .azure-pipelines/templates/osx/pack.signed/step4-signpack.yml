steps:
  - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@2
    displayName: Install signing plugin
    inputs:
      signType: '$(SignType)'

  - task: DownloadPipelineArtifact@1
    displayName: Download unsigned package
    inputs:
      buildType: 'current'
      artifactName: 'tmp.macpkg_unsigned'
      downloadPath: '$(Build.StagingDirectory)\pkg'

  - powershell: |
      $dir="$(Build.StagingDirectory)\pkg"
      Compress-Archive -Path $dir\*.pkg $dir\gcmcorepkg.zip
      Remove-Item $dir\*.pkg
    displayName: 'Zip package file for signing'

  - task: ms-vseng.MicroBuildTasks.7973a23b-33e3-4b00-a7d9-c06d90f8297f.MicroBuildSignMacFiles@1
    displayName: Sign package
    inputs:
      SigningTarget: '$(Build.StagingDirectory)\pkg\gcmcorepkg.zip'
      SigningCert: 8003
    condition: and(succeeded(), ne(variables['SignType'], 'test'))

  - powershell: |
      $dir="$(Build.StagingDirectory)\pkg"
      Expand-Archive -LiteralPath $dir\gcmcorepkg.zip -DestinationPath $dir -Force
      Remove-Item $dir\gcmcorepkg.zip -Force
    displayName: 'Unzip signed package file'

  - task: DownloadPipelineArtifact@1
    displayName: Download signed payload
    inputs:
      buildType: 'current'
      artifactName: 'tmp.macpayload_signed'
      downloadPath: '$(Build.StagingDirectory)\payload'

  - task: DownloadPipelineArtifact@1
    displayName: Download symbols
    inputs:
      buildType: 'current'
      artifactName: 'tmp.macsymbols'
      downloadPath: '$(Build.StagingDirectory)\symbols'

  - script: |
      xcopy "$(Build.StagingDirectory)\pkg\*.pkg" "$(Build.StagingDirectory)\publish\"
      xcopy "$(Build.StagingDirectory)\payload"   "$(Build.StagingDirectory)\publish\payload\"
      xcopy "$(Build.StagingDirectory)\symbols"   "$(Build.StagingDirectory)\publish\payload.sym\"
    displayName: Prepare final build artifacts

  - script: dotnet tool install --global nbgv
    displayName: Install Nerdbank.GitVersioning tool

  - script: nbgv cloud --common-vars
    displayName: Set version variables

  - task: ArchiveFiles@2
    displayName: Create payload archive
    inputs:
      rootFolderOrFile: '$(Build.StagingDirectory)\publish\payload\'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.StagingDirectory)\publish\gcmcore-osx-$(GitBuildVersion).zip'
      replaceExistingArchive: true

  - task: ArchiveFiles@2
    displayName: Create symbol archive
    inputs:
      rootFolderOrFile: '$(Build.StagingDirectory)\publish\payload.sym\'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.StagingDirectory)\publish\symbols.zip'
      replaceExistingArchive: true

  - task: PublishPipelineArtifact@0
    displayName: Publish signed installer artifacts
    inputs:
      artifactName: 'Installer.Mac.Signed'
      targetPath: '$(Build.StagingDirectory)\publish'
